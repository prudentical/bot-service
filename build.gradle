plugins {
    id 'java'
    id 'eclipse'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.hibernate.orm' version '6.4.4.Final'
    id 'org.graalvm.buildtools.native' version '0.9.28'
}

group = 'com.prudentical'
version = '0.0.1-SNAPSHOT'

bootJar{
    archiveFileName = "bot-service.jar"
}

java {
    sourceCompatibility = '21'
}

eclipse {
    classpath {
       downloadSources=true
       downloadJavadoc = true
    }
}

ext {
  set('springCloudVersion', "2023.0.1")
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    gradlePluginPortal()
    mavenCentral()
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
}

testing {
    suites { 
        configureEach{
            dependencies {
                implementation 'org.springframework.boot:spring-boot-starter-test'
                implementation 'org.springframework.boot:spring-boot-testcontainers'
                implementation 'org.testcontainers:junit-jupiter'
                implementation 'org.testcontainers:postgresql'
            }
        }
        test { 
            useJUnitJupiter() 
        }

        integrationTest(JvmTestSuite) { 
            dependencies {
                implementation project() 
            }
            sources { 
                java { 
                    srcDirs = ['src/it/java'] 
                }
            }
            targets { 
                all {
                    testTask.configure {
                        shouldRunAfter(test)
                    }
                }
            }
        }
    }
}

tasks.named('check') { 
    dependsOn(testing.suites.integrationTest)
}

hibernate {
    enhancement {
        enableAssociationManagement = true
    }
}

